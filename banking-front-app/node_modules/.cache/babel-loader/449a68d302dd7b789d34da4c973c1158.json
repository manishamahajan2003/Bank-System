{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\manum\\\\OneDrive\\\\Desktop\\\\banking-system\\\\bank-App\\\\banking-front-app\\\\src\\\\banker\\\\BankerTransactions.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function CustomerTransactions() {\n  _s();\n\n  const {\n    accountNumber\n  } = useParams(); // gets accountNumber from URL\n\n  const [transactions, setTransactions] = useState([]);\n  const [error, setError] = useState(\"\");\n  useEffect(() => {\n    async function fetchTransactions() {\n      try {\n        const res = await fetch(`http://localhost:5000/api/accounts/${accountNumber}/transactions`);\n        if (!res.ok) throw new Error(\"Failed to fetch transactions\");\n        const data = await res.json();\n        setTransactions(data);\n      } catch (err) {\n        setError(err.message);\n      }\n    }\n\n    fetchTransactions();\n  }, [accountNumber]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"All Transactions\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: \"red\"\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 23\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      border: \"1\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Account Number\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Date\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Amount\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Total Balance\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: transactions.map((tx, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: tx.accountNumber\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: new Date(tx.date).toLocaleDateString()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: tx.amount\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: tx.totalBalance\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 29\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 9\n  }, this);\n}\n\n_s(CustomerTransactions, \"J0gKnK7b8KdDXDfsIxTpu/JkZZw=\", false, function () {\n  return [useParams];\n});\n\n_c = CustomerTransactions;\n\nvar _c;\n\n$RefreshReg$(_c, \"CustomerTransactions\");","map":{"version":3,"names":["useEffect","useState","useParams","CustomerTransactions","accountNumber","transactions","setTransactions","error","setError","fetchTransactions","res","fetch","ok","Error","data","json","err","message","color","map","tx","index","Date","date","toLocaleDateString","amount","totalBalance"],"sources":["C:/Users/manum/OneDrive/Desktop/banking-system/bank-App/banking-front-app/src/banker/BankerTransactions.js"],"sourcesContent":["import { useEffect, useState } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\n\r\nexport default function CustomerTransactions() {\r\n    const { accountNumber } = useParams(); // gets accountNumber from URL\r\n    const [transactions, setTransactions] = useState([]);\r\n    const [error, setError] = useState(\"\");\r\n\r\n    useEffect(() => {\r\n        async function fetchTransactions() {\r\n            try {\r\n                const res = await fetch(`http://localhost:5000/api/accounts/${accountNumber}/transactions`);\r\n                if (!res.ok) throw new Error(\"Failed to fetch transactions\");\r\n                const data = await res.json();\r\n                setTransactions(data);\r\n            } catch (err) {\r\n                setError(err.message);\r\n            }\r\n        }\r\n        fetchTransactions();\r\n    }, [accountNumber]);\r\n\r\n    return (\r\n        <div>\r\n            <h2>All Transactions</h2>\r\n            {error && <p style={{ color: \"red\" }}>{error}</p>}\r\n\r\n            <table border=\"1\">\r\n                <thead>\r\n                    <tr>\r\n                        <th>Account Number</th>\r\n                        <th>Date</th>\r\n                        <th>Amount</th>\r\n                        <th>Total Balance</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {transactions.map((tx, index) => (\r\n                        <tr key={index}>\r\n                            <td>{tx.accountNumber}</td>\r\n                            <td>{new Date(tx.date).toLocaleDateString()}</td>\r\n                            <td>{tx.amount}</td>\r\n                            <td>{tx.totalBalance}</td>\r\n                        </tr>\r\n                    ))}\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n    );\r\n}\r\n"],"mappings":";;;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,SAASC,SAAT,QAA0B,kBAA1B;;AAEA,eAAe,SAASC,oBAAT,GAAgC;EAAA;;EAC3C,MAAM;IAAEC;EAAF,IAAoBF,SAAS,EAAnC,CAD2C,CACJ;;EACvC,MAAM,CAACG,YAAD,EAAeC,eAAf,IAAkCL,QAAQ,CAAC,EAAD,CAAhD;EACA,MAAM,CAACM,KAAD,EAAQC,QAAR,IAAoBP,QAAQ,CAAC,EAAD,CAAlC;EAEAD,SAAS,CAAC,MAAM;IACZ,eAAeS,iBAAf,GAAmC;MAC/B,IAAI;QACA,MAAMC,GAAG,GAAG,MAAMC,KAAK,CAAE,sCAAqCP,aAAc,eAArD,CAAvB;QACA,IAAI,CAACM,GAAG,CAACE,EAAT,EAAa,MAAM,IAAIC,KAAJ,CAAU,8BAAV,CAAN;QACb,MAAMC,IAAI,GAAG,MAAMJ,GAAG,CAACK,IAAJ,EAAnB;QACAT,eAAe,CAACQ,IAAD,CAAf;MACH,CALD,CAKE,OAAOE,GAAP,EAAY;QACVR,QAAQ,CAACQ,GAAG,CAACC,OAAL,CAAR;MACH;IACJ;;IACDR,iBAAiB;EACpB,CAZQ,EAYN,CAACL,aAAD,CAZM,CAAT;EAcA,oBACI;IAAA,wBACI;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QADJ,EAEKG,KAAK,iBAAI;MAAG,KAAK,EAAE;QAAEW,KAAK,EAAE;MAAT,CAAV;MAAA,UAA6BX;IAA7B;MAAA;MAAA;MAAA;IAAA,QAFd,eAII;MAAO,MAAM,EAAC,GAAd;MAAA,wBACI;QAAA,uBACI;UAAA,wBACI;YAAA;UAAA;YAAA;YAAA;YAAA;UAAA,QADJ,eAEI;YAAA;UAAA;YAAA;YAAA;YAAA;UAAA,QAFJ,eAGI;YAAA;UAAA;YAAA;YAAA;YAAA;UAAA,QAHJ,eAII;YAAA;UAAA;YAAA;YAAA;YAAA;UAAA,QAJJ;QAAA;UAAA;UAAA;UAAA;QAAA;MADJ;QAAA;QAAA;QAAA;MAAA,QADJ,eASI;QAAA,UACKF,YAAY,CAACc,GAAb,CAAiB,CAACC,EAAD,EAAKC,KAAL,kBACd;UAAA,wBACI;YAAA,UAAKD,EAAE,CAAChB;UAAR;YAAA;YAAA;YAAA;UAAA,QADJ,eAEI;YAAA,UAAK,IAAIkB,IAAJ,CAASF,EAAE,CAACG,IAAZ,EAAkBC,kBAAlB;UAAL;YAAA;YAAA;YAAA;UAAA,QAFJ,eAGI;YAAA,UAAKJ,EAAE,CAACK;UAAR;YAAA;YAAA;YAAA;UAAA,QAHJ,eAII;YAAA,UAAKL,EAAE,CAACM;UAAR;YAAA;YAAA;YAAA;UAAA,QAJJ;QAAA,GAASL,KAAT;UAAA;UAAA;UAAA;QAAA,QADH;MADL;QAAA;QAAA;QAAA;MAAA,QATJ;IAAA;MAAA;MAAA;MAAA;IAAA,QAJJ;EAAA;IAAA;IAAA;IAAA;EAAA,QADJ;AA2BH;;GA9CuBlB,oB;UACMD,S;;;KADNC,oB"},"metadata":{},"sourceType":"module"}