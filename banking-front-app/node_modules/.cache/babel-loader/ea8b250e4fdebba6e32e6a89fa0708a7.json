{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\manum\\\\OneDrive\\\\Desktop\\\\banking-system\\\\bank-App\\\\banking-front-app\\\\src\\\\banker\\\\banker-login.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport { useNavigate } from 'react-router-dom'; // import styles from './banker-login.module.css';\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function BankerLogin() {\n  _s();\n\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [message, setMessage] = useState('');\n  const navigate = useNavigate();\n\n  const handleLogin = async e => {\n    e.preventDefault();\n    setMessage('');\n\n    try {\n      const res = await fetch('http://localhost:5000/api/banker/login', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          username,\n          password\n        })\n      });\n\n      if (!res.ok) {\n        const errorData = await res.json().catch(() => ({}));\n        throw new Error(errorData.message || 'Invalid login');\n      }\n\n      const data = await res.json();\n      localStorage.setItem('bankerToken', data.token);\n      navigate('/accounts');\n    } catch (error) {\n      setMessage(`❌ ${error.message}`);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: loginCont,\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Banker Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleLogin,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Username\",\n        value: username,\n        onChange: e => setUsername(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        placeholder: \"Password\",\n        value: password,\n        onChange: e => setPassword(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"submit\",\n        value: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this), message && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 25\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 9\n  }, this);\n}\n\n_s(BankerLogin, \"eqKp26thtn4/43TzJV2g5Njd23Y=\", false, function () {\n  return [useNavigate];\n});\n\n_c = BankerLogin;\n\nvar _c;\n\n$RefreshReg$(_c, \"BankerLogin\");","map":{"version":3,"names":["useState","useNavigate","BankerLogin","username","setUsername","password","setPassword","message","setMessage","navigate","handleLogin","e","preventDefault","res","fetch","method","headers","body","JSON","stringify","ok","errorData","json","catch","Error","data","localStorage","setItem","token","error","loginCont","target","value"],"sources":["C:/Users/manum/OneDrive/Desktop/banking-system/bank-App/banking-front-app/src/banker/banker-login.js"],"sourcesContent":["import { useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\n// import styles from './banker-login.module.css';\r\n\r\nexport function BankerLogin() {\r\n    const [username, setUsername] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [message, setMessage] = useState('');\r\n    const navigate = useNavigate();\r\n\r\n    const handleLogin = async (e) => {\r\n        e.preventDefault();\r\n        setMessage('');\r\n\r\n        try {\r\n            const res = await fetch('http://localhost:5000/api/banker/login', {\r\n                method: 'POST',\r\n                headers: { 'Content-Type': 'application/json' },\r\n                body: JSON.stringify({ username, password })\r\n            });\r\n\r\n            if (!res.ok) {\r\n                const errorData = await res.json().catch(() => ({}));\r\n                throw new Error(errorData.message || 'Invalid login');\r\n            }\r\n\r\n            const data = await res.json();\r\n            localStorage.setItem('bankerToken', data.token);\r\n            navigate('/accounts');\r\n        } catch (error) {\r\n            setMessage(`❌ ${error.message}`);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className={loginCont}>\r\n            <h1>Banker Login</h1>\r\n            <form onSubmit={handleLogin}>\r\n                <input \r\n                    type=\"text\" \r\n                    placeholder=\"Username\" \r\n                    value={username} \r\n                    onChange={(e) => setUsername(e.target.value)} \r\n                />\r\n                <input \r\n                    type=\"password\" \r\n                    placeholder=\"Password\" \r\n                    value={password} \r\n                    onChange={(e) => setPassword(e.target.value)} \r\n                />\r\n                <input type=\"submit\" value=\"Login\" />\r\n            </form>\r\n            {message && <p>{message}</p>}\r\n        </div>\r\n    );\r\n}\r\n"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,SAASC,WAAT,QAA4B,kBAA5B,C,CACA;;;AAEA,OAAO,SAASC,WAAT,GAAuB;EAAA;;EAC1B,MAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BJ,QAAQ,CAAC,EAAD,CAAxC;EACA,MAAM,CAACK,QAAD,EAAWC,WAAX,IAA0BN,QAAQ,CAAC,EAAD,CAAxC;EACA,MAAM,CAACO,OAAD,EAAUC,UAAV,IAAwBR,QAAQ,CAAC,EAAD,CAAtC;EACA,MAAMS,QAAQ,GAAGR,WAAW,EAA5B;;EAEA,MAAMS,WAAW,GAAG,MAAOC,CAAP,IAAa;IAC7BA,CAAC,CAACC,cAAF;IACAJ,UAAU,CAAC,EAAD,CAAV;;IAEA,IAAI;MACA,MAAMK,GAAG,GAAG,MAAMC,KAAK,CAAC,wCAAD,EAA2C;QAC9DC,MAAM,EAAE,MADsD;QAE9DC,OAAO,EAAE;UAAE,gBAAgB;QAAlB,CAFqD;QAG9DC,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;UAAEhB,QAAF;UAAYE;QAAZ,CAAf;MAHwD,CAA3C,CAAvB;;MAMA,IAAI,CAACQ,GAAG,CAACO,EAAT,EAAa;QACT,MAAMC,SAAS,GAAG,MAAMR,GAAG,CAACS,IAAJ,GAAWC,KAAX,CAAiB,OAAO,EAAP,CAAjB,CAAxB;QACA,MAAM,IAAIC,KAAJ,CAAUH,SAAS,CAACd,OAAV,IAAqB,eAA/B,CAAN;MACH;;MAED,MAAMkB,IAAI,GAAG,MAAMZ,GAAG,CAACS,IAAJ,EAAnB;MACAI,YAAY,CAACC,OAAb,CAAqB,aAArB,EAAoCF,IAAI,CAACG,KAAzC;MACAnB,QAAQ,CAAC,WAAD,CAAR;IACH,CAfD,CAeE,OAAOoB,KAAP,EAAc;MACZrB,UAAU,CAAE,KAAIqB,KAAK,CAACtB,OAAQ,EAApB,CAAV;IACH;EACJ,CAtBD;;EAwBA,oBACI;IAAK,SAAS,EAAEuB,SAAhB;IAAA,wBACI;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QADJ,eAEI;MAAM,QAAQ,EAAEpB,WAAhB;MAAA,wBACI;QACI,IAAI,EAAC,MADT;QAEI,WAAW,EAAC,UAFhB;QAGI,KAAK,EAAEP,QAHX;QAII,QAAQ,EAAGQ,CAAD,IAAOP,WAAW,CAACO,CAAC,CAACoB,MAAF,CAASC,KAAV;MAJhC;QAAA;QAAA;QAAA;MAAA,QADJ,eAOI;QACI,IAAI,EAAC,UADT;QAEI,WAAW,EAAC,UAFhB;QAGI,KAAK,EAAE3B,QAHX;QAII,QAAQ,EAAGM,CAAD,IAAOL,WAAW,CAACK,CAAC,CAACoB,MAAF,CAASC,KAAV;MAJhC;QAAA;QAAA;QAAA;MAAA,QAPJ,eAaI;QAAO,IAAI,EAAC,QAAZ;QAAqB,KAAK,EAAC;MAA3B;QAAA;QAAA;QAAA;MAAA,QAbJ;IAAA;MAAA;MAAA;MAAA;IAAA,QAFJ,EAiBKzB,OAAO,iBAAI;MAAA,UAAIA;IAAJ;MAAA;MAAA;MAAA;IAAA,QAjBhB;EAAA;IAAA;IAAA;IAAA;EAAA,QADJ;AAqBH;;GAnDeL,W;UAIKD,W;;;KAJLC,W"},"metadata":{},"sourceType":"module"}